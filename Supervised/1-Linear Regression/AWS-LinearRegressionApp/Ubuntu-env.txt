Install the virtualenv tool using your package manager:

sudo apt install virtualenv
Create a python-environments directory in your user’s home directory and navigate to it:

mkdir ~/python-environments && cd ~/python-environments
Create a Python virtual environment. By default, virtualenv attempts to use the Python 2.5 interpreter to create a new environment. Since Ubuntu 18.04 does not have Python 2 installed, you should use the --python option to tell virtualenv to use your system’s Python 3.6 interpreter. Replace env with the name you would like to assign to your virtual environment.

 virtualenv --python=python3 env
The command creates a new directory with the name you assigned to your virtual environment. This directory contains all of the isolated files, packages, modules, and executables that is used by your new environment.

Validate that your environment is installed with the version of Python that you expect:

ls env/lib
You should see your env environments Python version:

python3.6



Activate Your Virtual Environment
Activate the newly created virtual environment:

 source env/bin/activate
The name of the working environment appears in parentheses after it’s created.

(env) example_user@hostname:~/python-environments$
You can now begin installing Python packages and libraries that will remain isolated to your virtual environment.

Deactivate a Virtual Environment
To deactivate an active virtual environment, issue the following command:

 deactivate